{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport LoginForm from '../components/LoginForm.vue';\nimport ComparisonForm from '../components/ComparisonForm.vue';\nimport axios from 'axios';\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/login',\n  component: LoginForm\n}, {\n  path: '/comparison',\n  component: ComparisonForm,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    try {\n      // 修改为正确的检查接口地址\n      const response = await axios.get('http://localhost:5000/api/users/check', {\n        withCredentials: true\n      });\n      if (response.data.authenticated) {\n        next();\n      } else {\n        next('/login');\n      }\n    } catch (error) {\n      console.error('认证检查失败:', error);\n      next('/login');\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginForm","ComparisonForm","axios","routes","path","redirect","component","meta","requiresAuth","router","history","beforeEach","to","from","next","matched","some","record","response","get","withCredentials","data","authenticated","error","console"],"sources":["D:/测试文件/数据比较/comparison-frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport LoginForm from '../components/LoginForm.vue'\r\nimport ComparisonForm from '../components/ComparisonForm.vue'\r\nimport axios from 'axios'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    redirect: '/login'\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: LoginForm\r\n  },\r\n  {\r\n    path: '/comparison',\r\n    component: ComparisonForm,\r\n    meta: { requiresAuth: true }\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\n\r\n// 路由守卫\r\nrouter.beforeEach(async (to, from, next) => {\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    try {\r\n      // 修改为正确的检查接口地址\r\n      const response = await axios.get('http://localhost:5000/api/users/check', {\r\n        withCredentials: true\r\n      })\r\n      if (response.data.authenticated) {\r\n        next()\r\n      } else {\r\n        next('/login')\r\n      }\r\n    } catch (error) {\r\n      console.error('认证检查失败:', error)\r\n      next('/login')\r\n    }\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router "],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdE,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,aAAa;EACnBE,SAAS,EAAEL,cAAc;EACzBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGX,YAAY,CAAC;EAC1BY,OAAO,EAAEX,gBAAgB,CAAC,CAAC;EAC3BI;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACE,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACV,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI;MACF;MACA,MAAMU,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,uCAAuC,EAAE;QACxEC,eAAe,EAAE;MACnB,CAAC,CAAC;MACF,IAAIF,QAAQ,CAACG,IAAI,CAACC,aAAa,EAAE;QAC/BR,IAAI,CAAC,CAAC;MACR,CAAC,MAAM;QACLA,IAAI,CAAC,QAAQ,CAAC;MAChB;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/BT,IAAI,CAAC,QAAQ,CAAC;IAChB;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}