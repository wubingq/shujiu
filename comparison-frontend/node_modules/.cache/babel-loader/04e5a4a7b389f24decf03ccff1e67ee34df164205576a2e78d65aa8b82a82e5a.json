{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { API_URL } from '@/config/api';\nexport default {\n  __name: 'LoginForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const loading = ref(false);\n    const loginFormRef = ref(null);\n    const loginForm = reactive({\n      username: 'admin',\n      password: 'admin'\n    });\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = async () => {\n      if (!loginFormRef.value) return;\n      await loginFormRef.value.validate(async valid => {\n        if (!valid) return;\n        loading.value = true;\n        try {\n          const response = await axios.post(`${API_URL}/api/users/login`, {\n            Username: loginForm.username,\n            Password: loginForm.password\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            withCredentials: true\n          });\n          if (response.status === 200) {\n            ElMessage.success('登录成功');\n            router.push('/comparison');\n          } else {\n            ElMessage.error(response.data.message || '登录失败');\n          }\n        } catch (error) {\n          console.error('登录错误:', error);\n          ElMessage.error(error.response?.data || '登录失败，请检查用户名和密码');\n        } finally {\n          loading.value = false;\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      loading,\n      loginFormRef,\n      loginForm,\n      rules,\n      handleLogin,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get API_URL() {\n        return API_URL;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","axios","API_URL","router","loading","loginFormRef","loginForm","username","password","rules","required","message","trigger","handleLogin","value","validate","valid","response","post","Username","Password","headers","withCredentials","status","success","push","error","data","console"],"sources":["D:/数据比较/comparison-frontend/src/components/LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <template #header>\r\n        <h2 class=\"card-title\">Excel文件比对系统</h2>\r\n      </template>\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginFormRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input \r\n            v-model=\"loginForm.username\" \r\n            placeholder=\"用户名\"\r\n            prefix-icon=\"User\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input \r\n            v-model=\"loginForm.password\" \r\n            type=\"password\" \r\n            placeholder=\"密码\"\r\n            prefix-icon=\"Lock\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"handleLogin\" \r\n            :loading=\"loading\"\r\n            style=\"width: 100%\"\r\n          >\r\n            登录\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"login-tip\">\r\n        默认用户名：admin<br>\r\n        默认密码：admin\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\nimport { API_URL } from '@/config/api'\r\n\r\nconst router = useRouter()\r\nconst loading = ref(false)\r\nconst loginFormRef = ref(null)\r\n\r\nconst loginForm = reactive({\r\n  username: 'admin',\r\n  password: 'admin'\r\n})\r\n\r\nconst rules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst handleLogin = async () => {\r\n  if (!loginFormRef.value) return\r\n  \r\n  await loginFormRef.value.validate(async (valid) => {\r\n    if (!valid) return\r\n    \r\n    loading.value = true\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/users/login`, {\r\n        Username: loginForm.username,\r\n        Password: loginForm.password\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        withCredentials: true\r\n      })\r\n      \r\n      if (response.status === 200) {\r\n        ElMessage.success('登录成功')\r\n        router.push('/comparison')\r\n      } else {\r\n        ElMessage.error(response.data.message || '登录失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('登录错误:', error)\r\n      ElMessage.error(error.response?.data || '登录失败，请检查用户名和密码')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: linear-gradient(to bottom right, #f0f4f8, #ffffff);\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-title {\r\n  text-align: center;\r\n  margin: 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.login-tip {\r\n  text-align: center;\r\n  color: #909399;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n}\r\n</style> "],"mappings":"AA2CA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,cAAc;;;;;;;IAEtC,MAAMC,MAAM,GAAGJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,OAAO,GAAGP,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMQ,YAAY,GAAGR,GAAG,CAAC,IAAI,CAAC;IAE9B,MAAMS,SAAS,GAAGR,QAAQ,CAAC;MACzBS,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAG;MACZF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,CACvD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC;IAEzD,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACR,YAAY,CAACS,KAAK,EAAE;MAEzB,MAAMT,YAAY,CAACS,KAAK,CAACC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACjD,IAAI,CAACA,KAAK,EAAE;QAEZZ,OAAO,CAACU,KAAK,GAAG,IAAI;QACpB,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,GAAGhB,OAAO,kBAAkB,EAAE;YAC9DiB,QAAQ,EAAEb,SAAS,CAACC,QAAQ;YAC5Ba,QAAQ,EAAEd,SAAS,CAACE;UACtB,CAAC,EAAE;YACDa,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,eAAe,EAAE;UACnB,CAAC,CAAC;UAEF,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;YAC3BvB,SAAS,CAACwB,OAAO,CAAC,MAAM,CAAC;YACzBrB,MAAM,CAACsB,IAAI,CAAC,aAAa,CAAC;UAC5B,CAAC,MAAM;YACLzB,SAAS,CAAC0B,KAAK,CAACT,QAAQ,CAACU,IAAI,CAAChB,OAAO,IAAI,MAAM,CAAC;UAClD;QACF,CAAC,CAAC,OAAOe,KAAK,EAAE;UACdE,OAAO,CAACF,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;UAC7B1B,SAAS,CAAC0B,KAAK,CAACA,KAAK,CAACT,QAAQ,EAAEU,IAAI,IAAI,gBAAgB,CAAC;QAC3D,CAAC,SAAS;UACRvB,OAAO,CAACU,KAAK,GAAG,KAAK;QACvB;MACF,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}